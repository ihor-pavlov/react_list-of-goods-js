{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","sortedGoods","setSortedGoods","isSorted","setIsSorted","isReversed","setIsReversed","sortButton","setSortButton","className","type","onClick","sorted","sort","good1","good2","localeCompare","reverse","length","reversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAsCC,mBAAS,GAAD,OAAKF,IAAnD,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoCN,mBAAS,MAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAuCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAmC,mBAAfF,EAAkC,GAAK,YACpEI,QA3CmB,WACzB,IAAMC,EAASP,EACX,YAAIJ,GACHY,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAC3CE,UACD,YAAIhB,GAAaY,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAEhEb,EAAeU,GACfR,GAAY,GACZI,EAAc,mBA+BV,iCAQA,wBACEE,KAAK,SACLD,UAAS,4BAAsC,aAAfF,EAA4B,GAAK,YACjEI,QAvCa,WACnB,IAAMC,EAASP,EACX,YAAIJ,GAAaY,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAMG,OAASJ,EAAMI,UAC7D,YAAIjB,GAAaY,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAEjEhB,EAAeU,GACfR,GAAY,GACZI,EAAc,aA6BV,4BAQA,wBACEE,KAAK,SACLD,UAAS,4BAAuBJ,EAAa,GAAK,YAClDM,QArCY,WAClB,IAAMQ,EAAW,YAAIlB,GAAagB,UAElCf,EAAeiB,GACff,GAAaD,GACbG,GAAeD,IA6BX,sBAQEF,GAAYE,IACZ,wBACEK,KAAK,SACLD,UAAU,4BACVE,QAtCQ,WAChBT,EAAe,GAAD,OAAKJ,IACnBM,GAAY,GACZE,GAAc,GACdE,EAAc,OA+BR,sBAUJ,6BACGP,EAAYmB,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCjGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e22e54b7.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [sortedGoods, setSortedGoods] = useState([...goodsFromServer]);\n  const [isSorted, setIsSorted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortButton, setSortButton] = useState(null);\n\n  const sortAlphabetically = () => {\n    const sorted = isReversed\n      ? [...sortedGoods]\n        .sort((good1, good2) => good1.localeCompare(good2))\n        .reverse()\n      : [...sortedGoods].sort((good1, good2) => good1.localeCompare(good2));\n\n    setSortedGoods(sorted);\n    setIsSorted(true);\n    setSortButton('alphabetically');\n  };\n\n  const sortByLength = () => {\n    const sorted = isReversed\n      ? [...sortedGoods].sort((good1, good2) => good2.length - good1.length)\n      : [...sortedGoods].sort((good1, good2) => good1.length - good2.length);\n\n    setSortedGoods(sorted);\n    setIsSorted(true);\n    setSortButton('byLength');\n  };\n\n  const reverseList = () => {\n    const reversed = [...sortedGoods].reverse();\n\n    setSortedGoods(reversed);\n    setIsSorted(!isSorted);\n    setIsReversed(!isReversed);\n  };\n\n  const resetList = () => {\n    setSortedGoods([...goodsFromServer]);\n    setIsSorted(false);\n    setIsReversed(false);\n    setSortButton(null);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortButton === 'alphabetically' ? '' : 'is-light'}`}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortButton === 'byLength' ? '' : 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={reverseList}\n        >\n          Reverse\n        </button>\n\n        {(isSorted || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetList}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}