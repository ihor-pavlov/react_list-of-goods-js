{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","sortedGoods","setSortedGoods","isSorted","setIsSorted","isReversed","setIsReversed","sortButton","setSortButton","sortGoods","sortField","sorted","sort","good1","good2","localeCompare","length","className","type","cn","onClick","reversed","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAsCC,mBAAS,GAAD,OAAKF,IAAnD,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoCN,mBAAS,MAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEMC,EAAY,SAACC,GACjB,IAAMC,EAAS,YAAIV,GAAaW,MAAK,SAACC,EAAOC,GAC3C,OAAQJ,GACN,IAAK,iBACH,OAAQL,EACJS,EAAMC,cAAcF,GACpBA,EAAME,cAAcD,GAE1B,IAAK,WACH,OAAQT,EACJS,EAAME,OAASH,EAAMG,OACrBH,EAAMG,OAASF,EAAME,OAE3B,QACE,OAAO,MAIbd,EAAeS,GACfP,GAAY,GACZI,EAAcE,IAiBhB,OACE,sBAAKO,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAA2B,mBAAfZ,IAEda,QAAS,kBAAMX,EAAU,mBAL3B,iCAUA,wBACES,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAA2B,aAAfZ,IAEda,QAAS,kBAAMX,EAAU,aAL3B,4BAUA,wBACES,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAad,IAEfe,QA1CY,WAClB,IAAMC,EAAW,YAAIpB,GAAaqB,UAElCpB,EAAemB,GACff,GAAeD,IAiCX,sBAUEF,GAAYE,IACZ,wBACEa,KAAK,SACLD,UAAU,4BACVG,QA5CQ,WAChBlB,EAAe,GAAD,OAAKJ,IACnBM,GAAY,GACZE,GAAc,GACdE,EAAc,OAqCR,sBAUJ,6BACGP,EAAYsB,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCxGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.214e8f5f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [sortedGoods, setSortedGoods] = useState([...goodsFromServer]);\n  const [isSorted, setIsSorted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortButton, setSortButton] = useState(null);\n\n  const sortGoods = (sortField) => {\n    const sorted = [...sortedGoods].sort((good1, good2) => {\n      switch (sortField) {\n        case 'alphabetically':\n          return (isReversed\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2)\n          );\n        case 'byLength':\n          return (isReversed\n            ? good2.length - good1.length\n            : good1.length - good2.length\n          );\n        default:\n          return 0;\n      }\n    });\n\n    setSortedGoods(sorted);\n    setIsSorted(true);\n    setSortButton(sortField);\n  };\n\n  const reverseList = () => {\n    const reversed = [...sortedGoods].reverse();\n\n    setSortedGoods(reversed);\n    setIsReversed(!isReversed);\n  };\n\n  const resetList = () => {\n    setSortedGoods([...goodsFromServer]);\n    setIsSorted(false);\n    setIsReversed(false);\n    setSortButton(null);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortButton !== 'alphabetically',\n          })}\n          onClick={() => sortGoods('alphabetically')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortButton !== 'byLength',\n          })}\n          onClick={() => sortGoods('byLength')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={reverseList}\n        >\n          Reverse\n        </button>\n\n        {(isSorted || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetList}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}